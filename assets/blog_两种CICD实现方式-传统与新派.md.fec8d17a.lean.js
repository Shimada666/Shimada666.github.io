import{_ as t,c as a,o,z as e,a as n}from"./chunks/framework.1deebb9d.js";const f=JSON.parse('{"title":"两种CICD实现方式-传统与新派","description":"","frontmatter":{"title":"两种CICD实现方式-传统与新派","tags":["运维","devops","kubernetes"]},"headers":[],"relativePath":"blog/两种CICD实现方式-传统与新派.md","filePath":"blog/两种CICD实现方式-传统与新派.md","lastUpdated":1703693085000}'),s={name:"blog/两种CICD实现方式-传统与新派.md"},_=e("p",null,"传统的 CICD 方式是通过 Jenkins 等工具实现，而新派的 CICD 方式是通过 GitOps 实现。本文将对两种方式进行对比。",-1),l=e("h2",{id:"什么是-cicd",tabindex:"-1"},[n("什么是 CICD "),e("a",{class:"header-anchor",href:"#什么是-cicd","aria-label":'Permalink to "什么是 CICD"'},"​")],-1),i=e("p",null,"CICD 是 Continuous Integration and Continuous Delivery 的缩写，即持续集成和持续交付。",-1),c=e("ul",null,[e("li",null,"持续集成(CI)是指开发人员将代码提交到代码仓库后，会自动触发编译、单元测试、集成测试等一系列流程。"),e("li",null,"持续交付(CD)是指持续集成的基础上，将代码部署到测试环境、预发环境、生产环境等一系列流程。")],-1),r=[_,l,i,c];function d(C,p,u,D,h,I){return o(),a("div",null,r)}const b=t(s,[["render",d]]);export{f as __pageData,b as default};
